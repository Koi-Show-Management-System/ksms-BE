name: Backend CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'KSMS.API/**'
      - 'KSMS.Application/**'
      - 'KSMS.Domain/**'
      - 'KSMS.Infrastructure/**'
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    name: Build and Deploy Backend
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --configuration Release

    - name: Publish
      run: dotnet publish --configuration Release --output ./publish

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Publish
      run: dotnet publish -c Release -o ./publish

    - uses: actions/upload-artifact@v3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add host to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to VPS
      run: |
        # Tạo thư mục release
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        RELEASE_PATH="/var/www/ksms-api/releases/$TIMESTAMP"
        
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p $RELEASE_PATH"
        
        # Copy files
        scp -r ./publish/* ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:$RELEASE_PATH/
        
        # Update symlink
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "ln -sfn $RELEASE_PATH /var/www/ksms-api/current"
        
        # Restart service
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo systemctl restart ksms-api"
        
        # Cleanup old releases (keep last 3)
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd /var/www/ksms-api/releases && ls -t | tail -n +4 | xargs -I {} rm -rf {}"
